@model PMS.ViewModel.ProjectViewModel

@{
    Layout = "~/Areas/Admin/Views/Shared/_MetroUILayout.cshtml";
    ViewBag.Title = "Edit";
}

 
<div id="content" class="col-lg-10 col-sm-11">
    <div class="row">
        <div class="col-lg-12">
            <div class="box">
                <div class="box-header">
                    <h2><i class="fa fa-edit"></i>Edit Project</h2>
                    <div class="box-icon">
                        <a href="form-elements.html#" class="btn-setting"><i class="fa fa-wrench"></i></a>
                        <a href="form-elements.html#" class="btn-minimize"><i class="fa fa-chevron-up"></i></a>
                        <a href="form-elements.html#" class="btn-close"><i class="fa fa-times"></i></a>
                    </div>
                </div>
                <div class="box-content">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)
                        @Html.HiddenFor(model => model.CreatedByUserId)
                        @Html.HiddenFor(model => model.CreatedOn)
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label " })
                            <div class="controls">
                                 <div class="input-group  col-sm-4">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label"  })
                            <div class="controls">
                                <div class="input-group  col-sm-4">
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    
                                </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProjectType, htmlAttributes: new { @class = "control-label  " })
                            <div class="controls">
                                <div class="input-group  col-sm-4">
                                    @*@Html.DropDownListFor(model => model.MetricId, Model.Metrics, "--Select Metric--", new { @class = "span4", @style = "display:block;width:270px;;float:left" })*@
                                    @Html.DropDownListFor(model => model.ProjectTypeId, Model.ProjectTypes, "--Select Project Type--", new { @class = "form-control" })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.ProjectType, "", new { @class = "text-danger" })
                                </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="controls">
                                <div class="checkbox">

                                    @Html.EditorFor(model => model.IsActive)
                                    
                                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                    </div>
                            </div>
                            @*<div class="controls">
                                <div class="col-md-1 col-sm-2 col-xs-3">
                                    <label class="switch switch-primary">
                                        <input type="checkbox" class="switch-input" checked>
                                        <span class="switch-label" data-on="Active" data-off="Inactive"></span>
                                        <span class="switch-handle"></span>
                                    </label>
                                </div>
                            </div>*@
                        </div>


                        <div class="form-group">
                            <div class="col-md-offset-2 controls">
                                <input type="submit" value="Save Changes" class="btn  btn-primary" />
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div><!--/col-->
    </div>
  
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>